{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n",
      "30\n"
     ]
    }
   ],
   "source": [
    "# Introduction \n",
    "\n",
    "print(\"Hello\")\n",
    "a = 10\n",
    "b = 20\n",
    "print(a+b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# OpenCV\n",
    "import cv2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(540, 570, 3)\n"
     ]
    }
   ],
   "source": [
    "# Read and Display an Image using Python\n",
    "\n",
    "\n",
    "\n",
    "img = cv2.imread(\"Images/b1.png\")\n",
    "\n",
    "#convert from BGR to RGB Color Space\n",
    "img = cv2.cvtColor(img,4)\n",
    "print(img.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.imshow(img)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1 2 3]\n",
      " [4 5 6]]\n",
      " Numpy array shape  (2, 3)\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "a = np.array([[1,2,3],\n",
    "             [4,5,6]])\n",
    "print(a)\n",
    "print(\" Numpy array shape \",a.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(100, 200, 3)\n"
     ]
    }
   ],
   "source": [
    "# OS - (Operating System) -> Access different files on your system\n",
    "\n",
    "\n",
    "import os\n",
    "\n",
    "image_names = os.listdir(\"Images\")\n",
    "\n",
    "animals = []\n",
    "for f in image_names:\n",
    "    if(f.endswith(\".png\")):\n",
    "        #print(f)\n",
    "        file_path = \"Images/\" + f\n",
    "        img = cv2.imread(file_path)\n",
    "        img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)\n",
    "        img = cv2.resize(img,(100,100))\n",
    "        animals.append(img)\n",
    "        \n",
    "# Make a collage\n",
    "\n",
    "border = np.zeros((10,200,3),dtype='uint8')\n",
    "\n",
    "\n",
    "animal_12 = np.hstack((animals[0],animals[1]))\n",
    "animal_34 = np.hstack((animals[2],animals[3]))\n",
    "collage = np.vstack((animal_12,border,animal_34))\n",
    "plt.imshow(collage)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "print(animal_12.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s = \"Hello\"\n",
    "s.endswith(\"lle\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Image Collage\n",
    "\n",
    "red = np.zeros((50,50,3),dtype='int')\n",
    "red[ : , : ,0] = 220\n",
    "\n",
    "green = np.zeros((50,50,3),dtype='int')\n",
    "green[ : , : ,1] = 250\n",
    "\n",
    "\n",
    "plt.imshow(red)\n",
    "plt.show()\n",
    "\n",
    "plt.imshow(green)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAPsAAAD7CAYAAACscuKmAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8li6FKAAALSUlEQVR4nO3df6jd9X3H8edruU2dltVER4iJzAylRQqd9tIpjjG0Zc6V6h9SLGWEIeSfbrU/oI3bX/tvQqn1j1EIuhKGtHapVJHS4lL7R/8wM1aZmmjNdGpC/EW1Hf1nDX3vj/PNuHNXcnLPj3vu3s8HXO79/jj5vvmQZ873nBxjqgpJ///91noPIGk+jF1qwtilJoxdasLYpSaMXWpiotiTXJ/kuSTHkuyd1lCSpi9r/Xv2JJuAnwEfB44DjwGfrqoj0xtP0rQsTfDYjwLHquoFgCTfBm4E3jX2rUntmOCCmr+nr1zvCXRWXoJ6s7LaoUli3wG8smL7OPCH7zwpyR5gD8BFwPcmuKDm79JH13sCnZWr3v3QzN+gq6p9VbVcVctbZ30xSe9qkthPABev2N457JO0gCaJ/THgsiS7kmwGbgEenM5YkqZtza/Zq+pUkr8CfghsAv6xqp6Z2mSSpmqSN+ioqu8D35/SLJJmyE/QSU0Yu9SEsUtNGLvUhLFLTRi71ISxS00Yu9SEsUtNGLvUhLFLTRi71ISxS00Yu9SEsUtNGLvUhLFLTRi71ISxS00Yu9SEsUtNGLvUhLFLTRi71ISxS00Yu9SEsUtNGLvUhLFLTRi71ISxS00Yu9SEsUtNGLvUhLFLTZwx9iQXJ3kkyZEkzyS5bdi/NcnDSZ4fvm+Z/biS1mqcZ/ZTwJeq6nLgKuCzSS4H9gIHq+oy4OCwLWlBnTH2qjpZVT8dfv5P4CiwA7gR2D+cth+4aVZDSprcWb1mT3IJcAVwCNhWVSeHQ68C297lMXuSHE5y+OcTDCppMmPHnuR9wHeBz1fVL1ceq6oCarXHVdW+qlququWtE40qaRJjxZ7kPYxCv7eq7h92v5Zk+3B8O/D6bEaUNA3jvBsf4B7gaFV9bcWhB4Hdw8+7gQemP56kaVka45xrgL8Ankry5LDvb4C/B76T5FbgJeBTsxlR0jScMfaq+gmQdzl83XTHkTQrfoJOasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmxo49yaYkTyR5aNjeleRQkmNJ7kuyeXZjSprU2Tyz3wYcXbF9B3BnVV0KvAXcOs3BJE3XWLEn2Qn8OXD3sB3gWuDAcMp+4KZZDChpOsZ9Zv868GXgN8P2BcDbVXVq2D4O7FjtgUn2JDmc5PDPJxpV0iTOGHuSTwCvV9Xja7lAVe2rquWqWt66ll9A0lQsjXHONcAnk9wAnAP8DnAXcH6SpeHZfSdwYnZjSprUGZ/Zq+r2qtpZVZcAtwA/qqrPAI8ANw+n7QYemNmUkiY2yd+zfwX4YpJjjF7D3zOdkSTNwji38f+jqn4M/Hj4+QXgo9MfSdIs+Ak6qQljl5owdqkJY5eaMHapCWOXmjB2qQljl5owdqkJY5eaMHapCWOXmjB2qQljl5owdqmJVNX8LvaRFI/O7XKagmP+3wA2lJuAp6qy2jGf2aUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmxoo9yflJDiR5NsnRJFcn2Zrk4STPD9+3zHpYSWs37jP7XcAPquqDwIeBo8Be4GBVXQYcHLYlLagzxp7k/cAfA/cAVNV/VdXbwI3A/uG0/Yz+YUtJC2qcZ/ZdwBvAN5M8keTuJOcB26rq5HDOq8C21R6cZE+Sw0kO8+Z0hpZ09saJfQm4EvhGVV0B/Ip33LLX6B+fX/UfoK+qfVW1XFXLXDjpuJLWapzYjwPHq+rQsH2AUfyvJdkOMHx/fTYjSpqGM8ZeVa8CryT5wLDrOuAI8CCwe9i3G3hgJhNKmoqlMc/7a+DeJJuBF4C/ZPQHxXeS3Aq8BHxqNiNKmoaxYq+qJ4HlVQ5dN91xJM2Kn6CTmjB2qQljl5owdqkJY5eaMHapCWOXmjB2qQljl5owdqkJY5eaMHapCWOXmjB2qQljl5owdqkJY5eaMHapCWOXmjB2qQljl5owdqkJY5eaMHapCWOXmjB2qQljl5owdqkJY5eaMHapCWOXmjB2qQljl5owdqmJsWJP8oUkzyR5Osm3kpyTZFeSQ0mOJbkvyeZZDytp7c4Ye5IdwOeA5ar6ELAJuAW4A7izqi4F3gJuneWgkiYz7m38EvDbSZaAc4GTwLXAgeH4fuCm6Y8naVrOGHtVnQC+CrzMKPJfAI8Db1fVqeG048CO1R6fZE+Sw0kO8+Z0hpZ09sa5jd8C3AjsAi4CzgOuH/cCVbWvqparapkL1zynpAmNcxv/MeDFqnqjqn4N3A9cA5w/3NYD7AROzGhGSVMwTuwvA1clOTdJgOuAI8AjwM3DObuBB2YzoqRpGOc1+yFGb8T9FHhqeMw+4CvAF5McAy4A7pnhnJImlKqa38U+kuLRuV1OU3DMT09sKDcBT1VltWN+gk5qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qwtilJoxdasLYpSaMXWrC2KUmjF1qIlU1v4slbwC/At6c20UncyEbZ1bYWPNupFlh48z7e1X1u6sdmGvsAEkOV9XyXC+6RhtpVthY826kWWHjzbsab+OlJoxdamI9Yt+3Dtdcq400K2yseTfSrLDx5v0/5v6aXdL68DZeasLYpSbmFnuS65M8l+RYkr3zuu64klyc5JEkR5I8k+S2Yf/WJA8neX74vmW9Zz0tyaYkTyR5aNjeleTQsMb3Jdm83jOeluT8JAeSPJvkaJKrF3Vtk3xh+D3wdJJvJTlnkdd2XHOJPckm4B+APwMuBz6d5PJ5XPssnAK+VFWXA1cBnx1m3AscrKrLgIPD9qK4DTi6YvsO4M6quhR4C7h1XaZa3V3AD6rqg8CHGc29cGubZAfwOWC5qj4EbAJuYbHXdjxVNfMv4Grghyu2bwdun8e1J5j5AeDjwHPA9mHfduC59Z5tmGUno0CuBR4CwugTXkurrfk6z/p+4EWGN4RX7F+4tQV2AK8AW4GlYW3/dFHX9my+5nUbf3oBTzs+7FtISS4BrgAOAduq6uRw6FVg2zqN9U5fB74M/GbYvgB4u6pODduLtMa7gDeAbw4vO+5Och4LuLZVdQL4KvAycBL4BfA4i7u2Y/MNundI8j7gu8Dnq+qXK4/V6I/1df+7yiSfAF6vqsfXe5YxLQFXAt+oqisY/fcR/+uWfYHWdgtwI6M/oC4CzgOuX9ehpmResZ8ALl6xvXPYt1CSvIdR6PdW1f3D7teSbB+ObwdeX6/5VrgG+GSS/wC+zehW/i7g/CRLwzmLtMbHgeNVdWjYPsAo/kVc248BL1bVG1X1a+B+Ruu9qGs7tnnF/hhw2fCO5mZGb3g8OKdrjyVJgHuAo1X1tRWHHgR2Dz/vZvRafl1V1e1VtbOqLmG0lj+qqs8AjwA3D6ctxKwAVfUq8EqSDwy7rgOOsIBry+j2/aok5w6/J07PupBre1bm+MbHDcDPgH8H/na936xYZb4/YnQb+W/Ak8PXDYxeCx8Engf+Bdi63rO+Y+4/AR4afv594F+BY8A/A+9d7/lWzPkHwOFhfb8HbFnUtQX+DngWeBr4J+C9i7y24375cVmpCd+gk5owdqkJY5eaMHapCWOXmjB2qQljl5r4b9iWlWUir8nSAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "red_green = np.hstack((red,green))\n",
    "green_red = red_green[ : , : : -1, :]\n",
    "\n",
    "=\n",
    "img = np.vstack((red_green,green_red))\n",
    "plt.imshow(img)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([20, 15, 10])"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = np.array((10,15,20))\n",
    "a[: :-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
